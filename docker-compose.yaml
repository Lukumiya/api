version: '3.5'

x-postgres-env: &x-postgres-env
  POSTGRES_USER: 'postgres'
  POSTGRES_PASSWORD: ${APP_DB_PWD:-postgres}
  POSTGRES_DB: ${APP_DB_NAME:-osuserver-dev}

x-app-env: &x-app-env
  CONFIG__SERVER__APIADDR: ${APP_SERVER_API_ADDR:-dev.risu.life}
  CONFIG__JWT__SECRET: ${APP_JWT_SECRET}
  CONFIG__JWT__HOURSBEFOREREVOKE: 12
  CONFIG__DATABASE__DSN: 'postgres://postgres:${DB_PWD:-postgres}@rl-database/${DB_NAME:-osuserver-dev}?sslmode=disable'
  CONFIG__MIRROR__BANCHO__USERNAME: ${APP_BANCHO_USERNAME:-not}
  CONFIG__MIRROR__BANCHO__PASSWORD: ${APP_BANCHO_PASSWORD:-set}

volumes:
  rl-psql-data:

services:
  rl-database:
    image: 'postgres:11-alpine'
    restart: unless-stopped
    environment:
      <<: *x-postgres-env
    volumes:
      - rl-psql-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rl-migration:
    image: 'deissh/rl-api:${RL_VERSION:-latest}'
    restart: on-failure
    depends_on:
      - rl-database
    environment:
      <<: *x-app-env
    command: |
      dbmate --wait --env CONFIG__DATABASE__DSN -d /migrations up
  
  rl-api:
    image: 'deissh/rl-api:${RL_VERSION:-latest}'
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: unless-stopped
    depends_on:
      - rl-database
      - rl-migration
    ports:
      - 127.0.0.1:2400:2400
    environment:
      <<: *x-app-env
